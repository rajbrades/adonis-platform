'use client';

import { useEffect, useState } from 'react';
import Link from 'next/link';
import { UserButton } from '@clerk/nextjs';

interface Consultation {
  id: string;
  first_name: string;
  last_name: string;
  email: string;
  date_of_birth: string;
  optimization_goals: string[];
  submitted_at: string;
  status: string;
}

export default function ProviderDashboard() {
  const [consultations, setConsultations] = useState<Consultation[]>([]);
  const [loading, setLoading] = useState(true);
  const [filter, setFilter] = useState<'all' | 'pending' | 'approved'>('pending');

  useEffect(() => {
    fetchConsultations();
  }, []);

  const fetchConsultations = async () => {
    try {
      const response = await fetch('/api/consultations');
      const data = await response.json();
      setConsultations(data);
    } catch (error) {
      console.error('Error fetching consultations:', error);
    } finally {
      setLoading(false);
    }
  };

  const filteredConsultations = consultations.filter(consultation => {
    if (filter === 'all') return true;
    if (filter === 'pending') return consultation.status === 'pending';
    if (filter === 'approved') return consultation.status === 'approved';
    return true;
  });

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-xl">Loading consultations...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header with Sign Out Button */}
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">Provider Dashboard</h1>
            <p className="text-gray-600 mt-1">Review and approve patient consultations</p>
          </div>
          <div className="flex items-center gap-4">
            <UserButton 
              afterSignOutUrl="/"
              appearance={{
                elements: {
                  avatarBox: "w-12 h-12 border-2 border-blue-600",
                  userButtonPopoverCard: "shadow-xl",
                  userButtonPopoverActionButton: "hover:bg-gray-100"
                }
              }}
              showName={true}
            />
          </div>
        </div>

        {/* Filter Tabs */}
        <div className="bg-white rounded-lg shadow mb-6">
          <div className="border-b border-gray-200">
            <nav className="flex -mb-px">
              <button
                onClick={() => setFilter('pending')}
                className={`px-6 py-3 text-sm font-medium ${
                  filter === 'pending'
                    ? 'border-b-2 border-blue-600 text-blue-600'
                    : 'text-gray-500 hover:text-gray-700'
                }`}
              >
                Pending ({consultations.filter(c => c.status === 'pending').length})
              </button>
              <button
                onClick={() => setFilter('approved')}
                className={`px-6 py-3 text-sm font-medium ${
                  filter === 'approved'
                    ? 'border-b-2 border-blue-600 text-blue-600'
                    : 'text-gray-500 hover:text-gray-700'
                }`}
              >
                Approved ({consultations.filter(c => c.status === 'approved').length})
              </button>
              <button
                onClick={() => setFilter('all')}
                className={`px-6 py-3 text-sm font-medium ${
                  filter === 'all'
                    ? 'border-b-2 border-blue-600 text-blue-600'
                    : 'text-gray-500 hover:text-gray-700'
                }`}
              >
                All ({consultations.length})
              </button>
            </nav>
          </div>
        </div>

        {/* Consultations List */}
        {filteredConsultations.length === 0 ? (
          <div className="bg-white rounded-lg shadow p-8 text-center">
            <p className="text-gray-500">No consultations found.</p>
          </div>
        ) : (
          <div className="space-y-4">
            {filteredConsultations.map((consultation) => (
              <div
                key={consultation.id}
                className="bg-white rounded-lg shadow hover:shadow-md transition-shadow p-6"
              >
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h3 className="text-xl font-semibold text-gray-900">
                        {consultation.first_name} {consultation.last_name}
                      </h3>
                      <span
                        className={`px-3 py-1 rounded-full text-xs font-medium ${
                          consultation.status === 'pending'
                            ? 'bg-yellow-100 text-yellow-800'
                            : 'bg-green-100 text-green-800'
                        }`}
                      >
                        {consultation.status}
                      </span>
                    </div>
                    <div className="space-y-1 text-sm text-gray-600">
                      <p>
                        <span className="font-medium">Email:</span> {consultation.email}
                      </p>
                      <p>
                        <span className="font-medium">DOB:</span> {consultation.date_of_birth}
                      </p>
                      <p>
                        <span className="font-medium">Goals:</span>{' '}
                        {consultation.optimization_goals?.join(', ') || 'Not specified'}
                      </p>
                      <p>
                        <span className="font-medium">Submitted:</span>{' '}
                        {new Date(consultation.submitted_at).toLocaleDateString()}
                      </p>
                    </div>
                  </div>
                  <div className="ml-4">
                    <Link
                      href={`/provider/approve/${consultation.id}`}
                      className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                    >
                      {consultation.status === 'pending' ? 'Review & Approve' : 'View Details'}
                    </Link>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}
